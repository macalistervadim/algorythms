"""
Given a string s consisting only of characters a, b and c.

Return the number of substrings containing at least one occurrence of all these characters a, b and c.
"""


def number_of_substrings(s: str) -> int:
    count = 0  # Это будет общий счетчик подстрок
    left = 0  # Левый указатель
    letters = {'a': 0, 'b': 0, 'c': 0}  # Словарь для подсчета символов в окне

    # Проходим по каждому символу строки с правым указателем
    for right in range(len(s)):
        letters[s[right]] += 1  # Увеличиваем счетчик для символа, который добавили

        # Пока в окне есть хотя бы по одному символу 'a', 'b', и 'c'
        while letters['a'] > 0 and letters['b'] > 0 and letters['c'] > 0:
            # Если окно содержит все три символа, начинаем сдвигать левый указатель
            letters[s[left]] -= 1  # Уменьшаем количество символа на позиции left
            left += 1  # Сдвигаем левый указатель вправо

        # Когда мы нашли окно с всеми тремя символами, добавляем количество подстрок
        # Количество таких подстрок = количество позиций для левого указателя
        count += left  # Все подстроки, начинающиеся с позиции left, подходят

    return count

"""
В чем суть решения: 

- Переменные:
count: Счетчик подстрок, которые содержат все три символа.
left: Левый указатель для окна.
letters: Словарь для отслеживания количества символов 'a', 'b' и 'c' в текущем окне.

- Основная идея:
Мы будем использовать два указателя: один — для правой границы окна, 
другой — для левой границы. Пройдем строку с правым указателем, 
а левый указатель будет двигаться вправо, когда все три символа в окне будут встречаться.

- Алгоритм:
1) Идем по строке с правым указателем j.
2) Когда находим новый символ на позиции j, увеличиваем его счетчик в словаре letters.
3) Как только все три символа ('a', 'b', 'c') появятся в окне, 
начинаем двигать левый указатель left вправо, уменьшать счетчик символов и 
считать количество подстрок, которые содержат все три символа.

- Подсчет подстрок: 
Когда правый указатель j находит окно, в котором есть хотя бы 
по одному символу 'a', 'b' и 'c', все подстроки, начинающиеся с 
left и заканчивающиеся на позиции j, будут подходить. 
Таких подстрок будет ровно left — это потому, что подстроки могут начинаться с 
позиции left и заканчиваться на любой позиции от left до j.

Пространственная сложность: 
O(1) - так как здесь используется фиксированного размера словарь
Временная сложность:
O(N) - так как мы проходим по всему массиву данных всего 1 раз
"""
